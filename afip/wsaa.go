// Code generated by gowsdl DO NOT EDIT.

package afip

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type LoginCms struct {
	XMLName xml.Name `xml:"http://wsaa.view.sua.dvadac.desein.afip.gov loginCms"`

	In0 string `xml:"in0,omitempty" json:"in0,omitempty"`
}

type LoginCmsResponse struct {
	XMLName xml.Name `xml:"http://wsaa.view.sua.dvadac.desein.afip.gov loginCmsResponse"`

	LoginCmsReturn string `xml:"loginCmsReturn,omitempty" json:"loginCmsReturn,omitempty"`
}

type Fault LoginFault

type LoginFault struct {
	XMLName xml.Name `xml:"https://wsaa.afip.gov.ar/ws/services/LoginCms fault"`
}

type LoginCMS interface {

	// Error can be either of the following types:
	//
	//   - LoginFault

	LoginCms(request *LoginCms) (*LoginCmsResponse, error)

	LoginCmsContext(ctx context.Context, request *LoginCms) (*LoginCmsResponse, error)
}

type loginCMS struct {
	client *soap.Client
}

func NewLoginCMS(client *soap.Client) LoginCMS {
	return &loginCMS{
		client: client,
	}
}

func (service *loginCMS) LoginCmsContext(ctx context.Context, request *LoginCms) (*LoginCmsResponse, error) {
	response := new(LoginCmsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *loginCMS) LoginCms(request *LoginCms) (*LoginCmsResponse, error) {
	return service.LoginCmsContext(
		context.Background(),
		request,
	)
}
